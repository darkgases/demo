<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.cn.vx.demo.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.cn.vx.demo.entity.UserInfo">
    <id column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="USER_ROLE_ID" jdbcType="INTEGER" property="userRoleId" />
    <result column="USER_ACCOUNT" jdbcType="VARCHAR" property="userAccount" />
    <result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone" />
    <result column="USER_PASSWORD" jdbcType="VARCHAR" property="userPassword" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_AGE" jdbcType="VARCHAR" property="userAge" />
    <result column="USER_SEX" jdbcType="VARCHAR" property="userSex" />
    <result column="USER_OPENID" jdbcType="VARCHAR" property="userOpenid" />
    <result column="USER_STATE" jdbcType="VARCHAR" property="userState" />
    <result column="USER_STATE_MSG" jdbcType="VARCHAR" property="userStateMsg" />
    <result column="USER_INFO_STATE" jdbcType="VARCHAR" property="userInfoState" />
    <result column="PASSWORD_ERR__TIME" jdbcType="VARCHAR" property="passwordErrTime" />
    <result column="CREATE_TIME" jdbcType="VARCHAR" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where USER_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.cn.vx.demo.entity.UserInfo">
    <selectKey keyProperty="userId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_info (USER_ROLE_ID, USER_ACCOUNT, USER_PHONE,
      USER_PASSWORD, USER_NAME, USER_AGE,
      USER_SEX, USER_OPENID, USER_STATE,
      USER_STATE_MSG, USER_INFO_STATE, PASSWORD_ERR__TIME,
      CREATE_TIME, UPDATE_TIME)
    values (#{userRoleId,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR},
      #{userPassword,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userAge,jdbcType=VARCHAR},
      #{userSex,jdbcType=VARCHAR}, #{userOpenid,jdbcType=VARCHAR}, #{userState,jdbcType=VARCHAR},
      #{userStateMsg,jdbcType=VARCHAR}, #{userInfoState,jdbcType=VARCHAR}, #{passwordErrTime,jdbcType=VARCHAR},
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.cn.vx.demo.entity.UserInfo">
    update user_info
    set USER_ROLE_ID = #{userRoleId,jdbcType=INTEGER},
      USER_ACCOUNT = #{userAccount,jdbcType=VARCHAR},
      USER_PHONE = #{userPhone,jdbcType=VARCHAR},
      USER_PASSWORD = #{userPassword,jdbcType=VARCHAR},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_AGE = #{userAge,jdbcType=VARCHAR},
      USER_SEX = #{userSex,jdbcType=VARCHAR},
      USER_OPENID = #{userOpenid,jdbcType=VARCHAR},
      USER_STATE = #{userState,jdbcType=VARCHAR},
      USER_STATE_MSG = #{userStateMsg,jdbcType=VARCHAR},
      USER_INFO_STATE = #{userInfoState,jdbcType=VARCHAR},
      PASSWORD_ERR__TIME = #{passwordErrTime,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select USER_ID, USER_ROLE_ID, USER_ACCOUNT, USER_PHONE, USER_PASSWORD, USER_NAME,
    USER_AGE, USER_SEX, USER_OPENID, USER_STATE, USER_STATE_MSG, USER_INFO_STATE, PASSWORD_ERR__TIME,
    CREATE_TIME, UPDATE_TIME
    from user_info
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select USER_ID, USER_ROLE_ID, USER_ACCOUNT, USER_PHONE, USER_PASSWORD, USER_NAME,
    USER_AGE, USER_SEX, USER_OPENID, USER_STATE, USER_STATE_MSG, USER_INFO_STATE, PASSWORD_ERR__TIME,
    CREATE_TIME, UPDATE_TIME
    from user_info
  </select>

  <sql id="Table_Name">
		USER_INFO
  </sql>

  <sql id="Base_Column">
		USER_ID,
		USER_ROLE_ID,
		USER_ACCOUNT,
		USER_PHONE,
		USER_PASSWORD,
		USER_NAME,
		USER_AGE,
		USER_SEX,
		USER_OPENID,
		USER_STATE,
		USER_STATE_MSG,
		USER_INFO_STATE,
		PASSWORD_ERR__TIME,
		CREATE_TIME,
		UPDATE_TIME
	</sql>

  <sql id="Base_Where">
    <trim suffixOverrides="AND">
      <if test="userId != null and userId != 0">
        USER_ID= #{userId}
        AND
      </if>
      <if test="userRoleId != null and userRoleId != 0">
        USER_ROLE_ID= #{userRoleId}
        AND
      </if>
      <if test="userAccount != null">
        USER_ACCOUNT= #{userAccount}
        AND
      </if>
      <if test="userPhone != null">
        USER_PHONE= #{userPhone}
        AND
      </if>
      <if test="userPassword != null">
        USER_PASSWORD= #{userPassword}
        AND
      </if>
      <if test="userName != null">
        USER_NAME= #{userName}
        AND
      </if>
      <if test="userAge != null">
        USER_AGE= #{userAge}
        AND
      </if>
      <if test="userSex != null">
        USER_SEX= #{userSex}
        AND
      </if>
      <if test="userOpenid != null">
        USER_OPENID= #{userOpenid}
        AND
      </if>
      <if test="userState != null">
        USER_STATE= #{userState}
        AND
      </if>
      <if test="userStateMsg != null">
        USER_STATE_MSG= #{userStateMsg}
        AND
      </if>
      <if test="userInfoState != null">
        USER_INFO_STATE= #{userInfoState}
        AND
      </if>
      <if test="passwordErrTime != null">
        PASSWORD_ERR__TIME= #{passwordErrTime}
        AND
      </if>
      <if test="createTime != null">
        CREATE_TIME= #{createTime}
        AND
      </if>
      <if test="updateTime != null">
        UPDATE_TIME= #{updateTime}
        AND
      </if>
    </trim>
  </sql>

  <sql id="Base_Select">
    select
    <include refid="Base_Column" />
    from
    <include refid="Table_Name" />
    <where>
      <include refid="Base_Where" />
    </where>
  </sql>

  <select id="selectOne" resultMap="BaseResultMap">
    <include refid="Base_Select" />
  </select>
</mapper>
